type tms_Project @model(key: ["uid", "source"]) {
  uid: ID
  name: String
  description: String
  createdAt: Timestamp
  updatedAt: Timestamp
  source: String
}

type tms_Task @model(key: ["uid", "source"]) {
  uid: ID
  name: String
  description: String
  type: tms_TaskType
  priority: String
  status: tms_TaskStatus
  createdAt: Timestamp
  updatedAt: Timestamp
  statusChangedAt: Timestamp
  parent: tms_Task @reference(back: "children")
  creator: tms_User @reference(back: "createdTasks")
  epic: tms_Epic @reference(back: "tasks")
  sprint: tms_Sprint @reference(back: "tasks")
  source: String
}

type tms_TaskDependency @model(key: ["dependentTask", "fulfillingTask"]) {
  dependentTask: tms_Task @reference(back: "dependencies")
  blocking: Boolean
  fulfillingTask: tms_Task @reference(back: "incomingDependencies")
}

type tms_TaskProjectRelationship @model(key: ["task", "project"]) {
  task: tms_Task @reference(back: "projects")
  project: tms_Project @reference(back: "tasks")
}

type tms_TaskAssignment @model(key: ["task", "assignee"]) {
  task: tms_Task @reference(back: "assignees")
  assignee: tms_User @reference(back: "assignedTasks")
}

type tms_TaskTag @model(key: ["label", "task"]) {
  label: tms_Label @reference(back: "tags")
  task: tms_Task @reference(back: "tags")
}

type tms_Label @model(key: ["name"]) {
  name: String
}

type tms_User @model(key: ["uid", "source"]) {
  uid: ID
  emailAddress: String
  name: String
  source: String
}

type tms_Epic @model(key: ["uid", "source"]) {
  uid: ID
  name: String
  description: String
  status: tms_EpicStatus
  project: tms_Project @reference(back: "epics")
  source: String
}

type tms_Sprint @model(key: ["uid", "source"]) {
  uid: ID
  name: String
  description: String
  state: tms_SprintState
  startedAt: Timestamp
  endedAt: Timestamp
  source: String
}

type tms_TaskType {
  category: tms_TaskCategory
  detail: String
}

enum tms_TaskCategory {
  Bug
  Custom
  Story
  Task
}

type tms_TaskStatus {
  category: tms_TaskStatusCategory
  detail: String
}

enum tms_TaskStatusCategory {
  Custom
  Done
  InProgress
  Todo
}

type tms_EpicStatus {
  category: tms_EpicStatusCategory
  detail: String
}

enum tms_EpicStatusCategory {
  Custom
  Done
  InProgress
  Todo
}

enum tms_SprintState {
  Active
  Closed
  Future
}
