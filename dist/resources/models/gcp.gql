enum gcp_iam_ServiceAccountKeyAlgorithm {
  KEY_ALG_RSA_1024
  KEY_ALG_RSA_2048
  KEY_ALG_UNSPECIFIED
}

enum gcp_iam_ServiceAccountKeyOrigin {
  GOOGLE_PROVIDED
  ORIGIN_UNSPECIFIED
  USER_PROVIDED
}

enum gcp_KeyType {
  KEY_TYPE_UNSPECIFIED
  SYSTEM_MANAGED
  USER_MANAGED
}

enum gcp_iam_ServiceAccountPrivateKeyType {
  TYPE_GOOGLE_CREDENTIALS_FILE
  TYPE_PKCS12_FILE
  TYPE_UNSPECIFIED
}

enum gcp_LifecycleState {
  ACTIVE
  DELETE_IN_PROGRESS
  DELETE_REQUESTED
  LIFECYCLE_STATE_UNSPECIFIED
}

enum gcp_LogType {
  ADMIN_READ
  DATA_READ
  DATA_WRITE
  LOG_TYPE_UNSPECIFIED
}

type gcp_iam_Role @model(key: ["name"]) {
  description: String
  etag: String
  includedPermissions: [String]
  name: String
  title: String
  project: gcp_Project @reference(back: "roles")
}

type gcp_iam_ServiceAccount @model(key: ["uniqueId"]) {
  description: String
  disabled: Boolean
  displayName: String
  email: String
  etag: String
  name: String
  oauth2ClientId: ID
  projectId: ID
  uniqueId: ID
  project: gcp_Project @reference(back: "serviceAccounts")
}

type gcp_iam_ServiceAccountKey @model(key: ["name"]){
  keyAlgorithm: gcp_iam_ServiceAccountKeyAlgorithm
  keyOrigin: gcp_iam_ServiceAccountKeyOrigin
  keyType: gcp_KeyType
  name: String
  publicKeyData: String
  validAfterTime: Time
  validBeforeTime: Time
  serviceAccount: gcp_iam_ServiceAccount @reference(back: "serviceAccountKeys")
  project: gcp_Project @reference(back: "serviceAccountKeys")
}

type gcp_Project @model(key: ["projectId"]) {
  projectNumber: String
  projectId: ID
  lifecycleState: gcp_LifecycleState
  name: String
  createTime: Time
  labels: [gcp_Label]
  parent: gcp_ResourceId
  iamPolicy: gcp_iam_Policy
}

type gcp_Label {
  key: String
  value: String
}

type gcp_ResourceId {
  type: String
  resourceId: ID
}

type gcp_iam_Policy {
  version: Int
  bindings: [gcp_Binding]
  auditConfigs: [gcp_AuditConfig]
  etag: String
}

type gcp_Binding {
  role: String
  members: [String]
  condition: gcp_Expr
}

type gcp_Expr {
  expression: String
  title: String
  description: String
  location: String
}

type gcp_AuditConfig {
  service: String
  exemptedMembers: [String]
  auditLogConfigs: [gcp_AuditLogConfig]
}

type gcp_AuditLogConfig {
  logType: gcp_LogType
  exemptedMembers: [String]
}
