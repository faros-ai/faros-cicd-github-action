name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          npm install
      - run: |
          npm run all
  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    env:
      FAROS_API_URL: https://dev.api.faros.ai
    steps:
      - uses: actions/checkout@v2

      - name: Set build start time
        id: set_start_time
        run: |
          # Set the current time in milliseconds: https://serverfault.com/a/151112
          echo "::set-output name=started-at::$(date +%s%N | cut -b1-13)"

      - name: Set build end time
        id: set_end_time
        run: |
          # Set the current time in milliseconds: https://serverfault.com/a/151112
          echo "::set-output name=ended-at::$(date +%s%N | cut -b1-13)"

      - uses: ./
        name: Emit build info to Faros
        id: emit-build-info
        with:
          api-key: ${{ secrets.HEPHAESTUS_DEV_FAROS_API_KEY }}
          api-url: ${{ env.FAROS_API_URL }}
          graph: faros-cicd-github-action
          model: build
          status: ${{ job.status }}
          started-at: ${{ steps.set_start_time.outputs.started-at }}
          ended-at: ${{ steps.set_end_time.outputs.ended-at }}
          build-pipeline-id: 'faros-cicd-github-action-test-workflow'

      - uses: ./
        id: emit-deployment-info
        name: Emit deployment info to Faros
        with:
          api-key: ${{ secrets.HEPHAESTUS_DEV_FAROS_API_KEY }}
          api-url: ${{ env.FAROS_API_URL }}
          graph: faros-cicd-github-action
          model: deployment
          status: Success
          deploy-id: ${{ format('emitter-deployment-{0}', github.run_number) }}
          deploy-app-name: Emitter
          deploy-app-platform: ECS
          deploy-platform: CodeDeploy
          build-id: ${{ steps.emit-build-info.outputs.build-id }}
          build-pipeline-id: ${{ steps.emit-build-info.outputs.pipeline-id }}
          build-org-id: ${{ steps.emit-build-info.outputs.org-id }}
          build-source: ${{ steps.emit-build-info.outputs.org-source }}
          started-at: ${{ steps.set_start_time.outputs.started-at }}
          ended-at: ${{ steps.set_end_time.outputs.ended-at }}
